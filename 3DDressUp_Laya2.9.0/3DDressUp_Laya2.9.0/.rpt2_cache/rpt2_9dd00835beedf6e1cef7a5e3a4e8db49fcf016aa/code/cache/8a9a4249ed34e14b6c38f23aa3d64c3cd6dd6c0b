{
  "code": "import { Admin, EventAdmin, TimerAdmin, Tools } from \"./Lwg\";\r\nimport { lwg3D } from \"./Lwg3D\";\r\nimport { _Res } from \"./_PreLoad\";\r\nexport var _MakeClothes;\r\n(function (_MakeClothes) {\r\n    let _Event;\r\n    (function (_Event) {\r\n        _Event[\"addTexture2D\"] = \"_MakeClothes_addTexture2D\";\r\n        _Event[\"rotateHanger\"] = \"_MakeClothes_rotateHanger\";\r\n        _Event[\"moveUltimately\"] = \"_MakeClothes_moveUltimately\";\r\n        _Event[\"resetTex\"] = \"_MakeClothes_resetTex\";\r\n        _Event[\"changeDir\"] = \"_MakeClothes_resetTex\";\r\n    })(_Event = _MakeClothes._Event || (_MakeClothes._Event = {}));\r\n    class MakeClothes extends Admin._SceneBase {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.Tex = {\r\n                Img: null,\r\n                DisImg: null,\r\n                touchP: null,\r\n                diffP: null,\r\n                state: 'none',\r\n                dir: 'Front',\r\n                dirType: {\r\n                    Front: 'Front',\r\n                    Reverse: 'Reverse',\r\n                },\r\n                stateType: {\r\n                    none: 'none',\r\n                    move: 'move',\r\n                    scale: 'scale',\r\n                    rotate: 'rotate',\r\n                    addTex: 'addTex',\r\n                },\r\n                createImg: (element) => {\r\n                    this.Tex.DisImg && this.Tex.DisImg.destroy();\r\n                    this.Tex.Img = Tools._Node.simpleCopyImg(element);\r\n                    this._SpriteVar(this.Tex.dir).addChild(this.Tex.Img);\r\n                    let lPoint = Tools._Point.getOtherLocal(element, this._SpriteVar('Ultimately'));\r\n                    this.Tex.DisImg = Tools._Node.simpleCopyImg(element);\r\n                    this._SpriteVar('Dispaly').addChild(this.Tex.DisImg);\r\n                    this.Tex.Img.skin = this.Tex.DisImg.skin = `${element.skin.substr(0, element.skin.length - 7)}.png`;\r\n                    this.Tex.Img.x = this.Tex.DisImg.x = lPoint.x;\r\n                    this.Tex.Img.y = this.Tex.DisImg.y = lPoint.y;\r\n                    this.Tex.Img.width = this.Tex.DisImg.width = 128;\r\n                    this.Tex.Img.height = this.Tex.DisImg.height = 128;\r\n                    this.Tex.Img.pivotX = this.Tex.Img.pivotY = this.Tex.DisImg.pivotX = this.Tex.DisImg.pivotY = 64;\r\n                    this._SpriteVar('Dispaly').visible = true;\r\n                    this.Tex.restore();\r\n                },\r\n                getTex: () => {\r\n                    let Img = this._ImgVar(this.Tex.dir);\r\n                    return Img.drawToTexture(Img.width, Img.height, Img.x, Img.y + Img.height);\r\n                },\r\n                checkDir: () => {\r\n                    if ((0 <= Math.abs(_MakeClothes._Hanger.transform.localRotationEulerY) && Math.abs(_MakeClothes._Hanger.transform.localRotationEulerY) < 90) || (270 < Math.abs(_MakeClothes._Hanger.transform.localRotationEulerY) && Math.abs(_MakeClothes._Hanger.transform.localRotationEulerY) <= 360)) {\r\n                        this.Tex.dir = this.Tex.dirType.Front;\r\n                    }\r\n                    else {\r\n                        this.Tex.dir = this.Tex.dirType.Reverse;\r\n                    }\r\n                },\r\n                setImgPos: (out) => {\r\n                    this.Tex.checkDir();\r\n                    let _width = this._ImgVar(this.Tex.dir).width;\r\n                    let _height = this._ImgVar(this.Tex.dir).height;\r\n                    let angleY = Tools._Point.pointByAngle(_MakeClothes._Hanger.transform.position.x - out.point.x, _MakeClothes._Hanger.transform.position.z - out.point.z);\r\n                    let _angleY;\r\n                    if (this.Tex.dir == this.Tex.dirType.Front) {\r\n                        _angleY = angleY + 90 + _MakeClothes._HangerSimRY;\r\n                        this.Tex.Img.x = _width - _width / 180 * (_angleY);\r\n                        console.log(_MakeClothes._HangerSimRY, angleY, _angleY);\r\n                    }\r\n                    else {\r\n                        _angleY = angleY + 90 + _MakeClothes._HangerSimRY - 180;\r\n                        console.log(_MakeClothes._HangerSimRY, angleY, _angleY);\r\n                        this.Tex.Img.x = _width - _width / 180 * (_angleY);\r\n                    }\r\n                    let Dir = _MakeClothes._Hanger.getChildByName(this.Tex.dir);\r\n                    let outY = out.point.y;\r\n                    let h = outY - _MakeClothes._HangerP.transform.position.y;\r\n                    let _DirHeight = 0.28;\r\n                    let radio = 1 - h / _DirHeight;\r\n                    this.Tex.Img.y = radio * _height;\r\n                },\r\n                getOut: () => {\r\n                    this.Tex.checkDir();\r\n                    let x = this._ImgVar('Frame').x;\r\n                    let y = this._ImgVar('Frame').y;\r\n                    let _width = this._ImgVar('Frame').width;\r\n                    let _height = this._ImgVar('Frame').height;\r\n                    let p1 = [_width * 1 / 4, _height * 1 / 4];\r\n                    let p2 = [_width * 1 / 4, _height * 3 / 4];\r\n                    let p3 = [_width * 3 / 4, _height * 1 / 4];\r\n                    let p4 = [_width * 3 / 4, _height * 3 / 4];\r\n                    let p5 = [0, 0];\r\n                    let p6 = [x + _width, y];\r\n                    let p7 = [x, y + _height];\r\n                    let p8 = [x + _width / 2, y + _height / 2];\r\n                    let p9 = [x + _width, y + _height];\r\n                    let posArr = [p5];\r\n                    let out;\r\n                    let gPoint = this._SpriteVar('Wireframe').localToGlobal(new Laya.Point(posArr[0][0], posArr[0][1]));\r\n                    out = Tools._3D.rayScanning(_MakeClothes._MainCamara, _MakeClothes._Scene3D, new Laya.Vector2(gPoint.x + x, gPoint.y + y), this.Tex.dir);\r\n                    return out;\r\n                },\r\n                move: (e) => {\r\n                    this.Tex.DisImg.x += this.Tex.diffP.x;\r\n                    this.Tex.DisImg.y += this.Tex.diffP.y;\r\n                    let gPoint = this._SpriteVar('Dispaly').localToGlobal(new Laya.Point(this.Tex.DisImg.x, this.Tex.DisImg.y));\r\n                    this._ImgVar('Wireframe').pos(gPoint.x, gPoint.y);\r\n                    let out = this.Tex.getOut();\r\n                    if (out) {\r\n                        this.Tex.setImgPos(out);\r\n                        this._ImgVar('Wireframe').visible = true;\r\n                        this.Tex.state = this.Tex.stateType.addTex;\r\n                        this._SpriteVar('Dispaly').visible = false;\r\n                    }\r\n                },\r\n                addTex: (e) => {\r\n                    this.Tex.Img.x += this.Tex.diffP.x;\r\n                    this.Tex.Img.y += this.Tex.diffP.y;\r\n                    this.Tex.DisImg.x += this.Tex.diffP.x;\r\n                    this.Tex.DisImg.y += this.Tex.diffP.y;\r\n                    let gPoint = this._SpriteVar('Dispaly').localToGlobal(new Laya.Point(this.Tex.DisImg.x, this.Tex.DisImg.y));\r\n                    this._ImgVar('Wireframe').pos(gPoint.x, gPoint.y);\r\n                    let out = this.Tex.getOut();\r\n                    if (!out) {\r\n                        this._ImgVar('Wireframe').visible = false;\r\n                        this.Tex.state = this.Tex.stateType.move;\r\n                        this.Tex.Img.x = Laya.stage.width;\r\n                        this._SpriteVar('Dispaly').visible = true;\r\n                    }\r\n                    else {\r\n                        this.Tex.setImgPos(out);\r\n                    }\r\n                    EventAdmin._notify(_Event.addTexture2D, [this.Tex.dir, this.Tex.getTex().bitmap]);\r\n                },\r\n                scale: (e) => {\r\n                    let lPoint = this._ImgVar('Wireframe').globalToLocal(new Laya.Point(e.stageX, e.stageY));\r\n                    this._ImgVar('WConversion').pos(lPoint.x, lPoint.y);\r\n                    this._ImgVar('Frame').width = lPoint.x;\r\n                    this._ImgVar('Frame').height = Math.abs(lPoint.y);\r\n                    let gPoint = this._Owner.localToGlobal(new Laya.Point(this._ImgVar('Wireframe').x, this._ImgVar('Wireframe').y));\r\n                    this.Tex.Img.rotation = this.Tex.DisImg.rotation = this._ImgVar('Wireframe').rotation = Tools._Point.pointByAngle(e.stageX - gPoint.x, e.stageY - gPoint.y) + 45;\r\n                    let scaleWidth = this._ImgVar('Frame').width - this._ImgVar('Wireframe').width;\r\n                    let scaleheight = this._ImgVar('Frame').height - this._ImgVar('Wireframe').height;\r\n                    this.Tex.DisImg.width = this.Tex.Img.width = 128 + scaleWidth;\r\n                    this.Tex.DisImg.height = this.Tex.Img.height = 128 + scaleheight;\r\n                    Tools._Node.changePivot(this._ImgVar('Wireframe'), this._ImgVar('Frame').width / 2, this._ImgVar('Frame').height / 2);\r\n                    Tools._Node.changePivotCenter(this.Tex.Img);\r\n                    Tools._Node.changePivotCenter(this.Tex.DisImg);\r\n                    EventAdmin._notify(_Event.addTexture2D, [this.Tex.dir, this.Tex.getTex().bitmap]);\r\n                },\r\n                rotate: (e) => {\r\n                    if (this.Tex.diffP.x > 0) {\r\n                        EventAdmin._notify(_Event.rotateHanger, [1]);\r\n                    }\r\n                    else {\r\n                        EventAdmin._notify(_Event.rotateHanger, [0]);\r\n                    }\r\n                },\r\n                none: () => {\r\n                    return;\r\n                },\r\n                operation: (e) => {\r\n                    this.Tex.diffP = new Laya.Point(e.stageX - this.Tex.touchP.x, e.stageY - this.Tex.touchP.y);\r\n                    this.Tex[this.Tex.state](e);\r\n                    this.Tex.touchP = new Laya.Point(e.stageX, e.stageY);\r\n                },\r\n                restore: () => {\r\n                    this._ImgVar('Wireframe').rotation = 0;\r\n                    this._ImgVar('Wireframe').pivotX = this._ImgVar('Wireframe').width / 2;\r\n                    this._ImgVar('Wireframe').pivotY = this._ImgVar('Wireframe').height / 2;\r\n                    this._ImgVar('WConversion').x = this._ImgVar('Frame').width = this._ImgVar('Wireframe').width;\r\n                    this._ImgVar('WConversion').y = this._ImgVar('Frame').height = this._ImgVar('Wireframe').height;\r\n                    this._ImgVar('Wireframe').visible = false;\r\n                },\r\n                close: () => {\r\n                    this.Tex.restore();\r\n                    if (this.Tex.DisImg) {\r\n                        this.Tex.DisImg.destroy();\r\n                    }\r\n                    if (this.Tex.Img) {\r\n                        this.Tex.Img.destroy();\r\n                    }\r\n                    this.Tex.state = this.Tex.stateType.none;\r\n                    this.Tex.touchP = null;\r\n                    EventAdmin._notify(_Event.addTexture2D, [this.Tex.dir, this.Tex.getTex().bitmap]);\r\n                },\r\n                btn: () => {\r\n                    for (let index = 0; index < this._ImgVar('Figure').numChildren; index++) {\r\n                        const element = this._ImgVar('Figure').getChildAt(index);\r\n                        this._btnDown(element, (e) => {\r\n                            this.Tex.state = this.Tex.stateType.move;\r\n                            this.Tex.createImg(element);\r\n                        });\r\n                    }\r\n                    this._btnFour(this._ImgVar('WConversion'), (e) => {\r\n                        this.Tex.state = this.Tex.stateType.scale;\r\n                    }, null, (e) => {\r\n                        this.Tex.state = this.Tex.stateType.addTex;\r\n                    });\r\n                    this._btnUp(this._ImgVar('WClose'), (e) => {\r\n                        this.Tex.close();\r\n                    });\r\n                    this._btnFour(this._ImgVar('BtnL'), (e) => {\r\n                        this._ImgVar('Wireframe').visible = false;\r\n                        this.Tex.state = this.Tex.stateType.rotate;\r\n                        TimerAdmin._frameLoop(1, this._ImgVar('BtnL'), () => {\r\n                            EventAdmin._notify(_Event.rotateHanger, [0]);\r\n                        });\r\n                    }, null, () => {\r\n                        Laya.timer.clearAll(this._ImgVar('BtnL'));\r\n                    }, () => {\r\n                        Laya.timer.clearAll(this._ImgVar('BtnL'));\r\n                    });\r\n                    this._btnFour(this._ImgVar('BtnR'), (e) => {\r\n                        this._ImgVar('Wireframe').visible = false;\r\n                        this.Tex.state = this.Tex.stateType.rotate;\r\n                        TimerAdmin._frameLoop(1, this._ImgVar('BtnR'), () => {\r\n                            EventAdmin._notify(_Event.rotateHanger, [1]);\r\n                        });\r\n                    }, null, () => {\r\n                        Laya.timer.clearAll(this._ImgVar('BtnR'));\r\n                    }, () => {\r\n                        Laya.timer.clearAll(this._ImgVar('BtnR'));\r\n                    });\r\n                }\r\n            };\r\n        }\r\n        lwgOnAwake() {\r\n        }\r\n        lwgAdaptive() {\r\n            this._adaWidth([this._ImgVar('BtnR'), this._ImgVar('BtnL')]);\r\n        }\r\n        lwgOpenAni() {\r\n            return 100;\r\n        }\r\n        lwgOnStart() {\r\n            _MakeClothes._Scene3D = _Res._list.scene3D.MakeClothes.Scene;\r\n            if (!_MakeClothes._Scene3D.getComponent(MakeClothes3D)) {\r\n                _MakeClothes._Scene3D.addComponent(MakeClothes3D);\r\n            }\r\n            else {\r\n                _MakeClothes._Scene3D.getComponent(MakeClothes3D).lwgOnStart();\r\n            }\r\n            this.Tex.dir = this.Tex.dirType.Reverse;\r\n            EventAdmin._notify(_Event.addTexture2D, [this.Tex.dirType.Reverse, this.Tex.getTex().bitmap]);\r\n            this.Tex.dir = this.Tex.dirType.Front;\r\n            EventAdmin._notify(_Event.addTexture2D, [this.Tex.dirType.Front, this.Tex.getTex().bitmap]);\r\n        }\r\n        lwgEventRegister() {\r\n        }\r\n        lwgBtnRegister() {\r\n            this.Tex.btn();\r\n            this._btnUp(this._ImgVar('BtnNext'), () => {\r\n                this._openScene('MakeUp', true, true);\r\n            });\r\n        }\r\n        onStageMouseDown(e) {\r\n            this.Tex.touchP = new Laya.Point(e.stageX, e.stageY);\r\n        }\r\n        onStageMouseMove(e) {\r\n            this.Tex.operation(e);\r\n        }\r\n        onStageMouseUp() {\r\n            if (!this.Tex.getOut()) {\r\n                this.Tex.close();\r\n            }\r\n        }\r\n    }\r\n    _MakeClothes.MakeClothes = MakeClothes;\r\n    _MakeClothes._HangerSimRY = 0;\r\n    class MakeClothes3D extends lwg3D._Scene3DBase {\r\n        lwgOnAwake() {\r\n            _MakeClothes._Hanger = this._Child('Hanger');\r\n            _MakeClothes._HangerP = this._Child('HangerP');\r\n            _MakeClothes._MainCamara = this._MainCamera;\r\n        }\r\n        lwgEventRegister() {\r\n            EventAdmin._register(_Event.addTexture2D, this, (name, Text2D) => {\r\n                let bMaterial = this._findMRenderer(name).material;\r\n                bMaterial.albedoTexture.destroy();\r\n                bMaterial.albedoTexture = Text2D;\r\n            });\r\n            EventAdmin._register(_Event.rotateHanger, this, (num) => {\r\n                if (num == 1) {\r\n                    this._childTrans('Hanger').localRotationEulerY++;\r\n                    _MakeClothes._HangerSimRY++;\r\n                    if (_MakeClothes._HangerSimRY > 360) {\r\n                        _MakeClothes._HangerSimRY = 0;\r\n                    }\r\n                }\r\n                else {\r\n                    this._childTrans('Hanger').localRotationEulerY--;\r\n                    _MakeClothes._HangerSimRY--;\r\n                    if (_MakeClothes._HangerSimRY < 0) {\r\n                        _MakeClothes._HangerSimRY = 359;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _MakeClothes.MakeClothes3D = MakeClothes3D;\r\n})(_MakeClothes || (_MakeClothes = {}));\r\nexport default _MakeClothes.MakeClothes;\r\n",
  "references": [
    "D:/Game/project/3DDressUp/Project_Laya2.9.0/3DDressUp_Laya2.9.0/3DDressUp_Laya2.9.0/src/script/TJ/Admanager.ts",
    "D:/Game/project/3DDressUp/Project_Laya2.9.0/3DDressUp_Laya2.9.0/3DDressUp_Laya2.9.0/src/script/Lwg/Lwg.ts",
    "D:/Game/project/3DDressUp/Project_Laya2.9.0/3DDressUp_Laya2.9.0/3DDressUp_Laya2.9.0/src/script/Lwg/Lwg3D.ts",
    "D:/Game/project/3DDressUp/Project_Laya2.9.0/3DDressUp_Laya2.9.0/3DDressUp_Laya2.9.0/src/script/Lwg/_MakeUp.ts",
    "D:/Game/project/3DDressUp/Project_Laya2.9.0/3DDressUp_Laya2.9.0/3DDressUp_Laya2.9.0/src/script/Lwg/_PreLoad.ts"
  ]
}
