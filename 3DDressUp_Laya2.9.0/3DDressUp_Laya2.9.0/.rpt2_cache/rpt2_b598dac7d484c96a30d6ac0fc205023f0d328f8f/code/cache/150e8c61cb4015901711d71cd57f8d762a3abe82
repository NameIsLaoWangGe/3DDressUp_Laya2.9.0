{
  "code": "import { Admin, Animation2D, DataAdmin, Effects, EventAdmin, TimerAdmin, Tools } from \"./Lwg\";\r\nimport { _Res } from \"./_PreLoad\";\r\nexport var _MakeTailor;\r\n(function (_MakeTailor) {\r\n    let _Event;\r\n    (function (_Event) {\r\n        _Event[\"trigger\"] = \"_MakeTailor_trigger\";\r\n        _Event[\"completeEffc\"] = \"_MakeTailor_completeAni\";\r\n        _Event[\"changeClothes\"] = \"_MakeTailor_changeClothes\";\r\n        _Event[\"scissorAppear\"] = \"_MakeTailor_scissorAppear\";\r\n        _Event[\"scissorPlay\"] = \"_MakeTailor_scissorPlay\";\r\n        _Event[\"scissorStop\"] = \"_MakeTailor_scissorStop\";\r\n        _Event[\"scissorRotation\"] = \"_MakeTailor_scissorRotation\";\r\n        _Event[\"scissorSitu\"] = \"_MakeTailor_scissorSitu\";\r\n    })(_Event = _MakeTailor._Event || (_MakeTailor._Event = {}));\r\n    class _Data extends DataAdmin._Table {\r\n        constructor() {\r\n            super(...arguments);\r\n            this._classify = {\r\n                Dress: 'Dress',\r\n                Top: 'Top',\r\n                Bottoms: 'Bottoms',\r\n            };\r\n        }\r\n        static _Ins() {\r\n            if (!this.ins) {\r\n                this.ins = new _Data('DIY_Data', _Res._list.json.Clothes.url);\r\n                this.ins._pitchClassify = this.ins._classify.Dress;\r\n            }\r\n            return this.ins;\r\n        }\r\n    }\r\n    _MakeTailor._Data = _Data;\r\n    class _Scissor extends Admin._ObjectBase {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.Ani = {\r\n                shearSpeed: 4,\r\n                range: 40,\r\n                dir: 'up',\r\n                dirType: {\r\n                    up: 'up',\r\n                    down: 'down',\r\n                },\r\n                appear: () => {\r\n                    let time = 500;\r\n                    Animation2D.move_rotate(this._Owner, 720, this._fPoint, time, 0, () => {\r\n                        this._Owner.rotation = 0;\r\n                    });\r\n                },\r\n                paly: () => {\r\n                    TimerAdmin._clearAll([this.Ani]);\r\n                    Animation2D._clearAll([this.Ani]);\r\n                    TimerAdmin._frameLoop(1, this.Ani, () => {\r\n                        if (this._SceneImg('S2').rotation > this.Ani.range) {\r\n                            this.Ani.dir = 'up';\r\n                        }\r\n                        else if (this._SceneImg('S2').rotation <= 0) {\r\n                            this.Ani.dir = 'down';\r\n                        }\r\n                        if (this.Ani.dir == 'up') {\r\n                            this._SceneImg('S2').rotation -= this.Ani.shearSpeed * 2;\r\n                            this._SceneImg('S1').rotation += this.Ani.shearSpeed * 2;\r\n                        }\r\n                        else if (this.Ani.dir == 'down') {\r\n                            this._SceneImg('S2').rotation += this.Ani.shearSpeed;\r\n                            this._SceneImg('S1').rotation -= this.Ani.shearSpeed;\r\n                        }\r\n                    });\r\n                },\r\n                stop: () => {\r\n                    TimerAdmin._frameOnce(30, this.Ani, () => {\r\n                        let time = 100;\r\n                        TimerAdmin._clearAll([this.Ani]);\r\n                        Animation2D._clearAll([this.Ani]);\r\n                        Animation2D.rotate(this._SceneImg('S1'), -this.Ani.range / 3, time);\r\n                        Animation2D.rotate(this._SceneImg('S2'), this.Ani.range / 3, time);\r\n                    });\r\n                },\r\n                event: () => {\r\n                    this._evReg(_Event.scissorAppear, () => {\r\n                        this.Ani.appear();\r\n                    });\r\n                    this._evReg(_Event.scissorPlay, () => {\r\n                        this.Ani.paly();\r\n                    });\r\n                    this._evReg(_Event.scissorStop, () => {\r\n                        this.Ani.stop();\r\n                    });\r\n                    this._evReg(_Event.scissorSitu, () => {\r\n                        Animation2D.move_rotate(this._Owner, this._fRotation + 360, this._fPoint, 600, 0);\r\n                    });\r\n                    this._evReg(_Event.scissorRotation, (rotate) => {\r\n                        TimerAdmin._clearAll([this._Owner]);\r\n                        let time = 10;\r\n                        let angle;\r\n                        if (Math.abs(rotate - this._Owner.rotation) < 180) {\r\n                            angle = rotate - this._Owner.rotation;\r\n                        }\r\n                        else {\r\n                            angle = -(360 - (rotate - this._Owner.rotation));\r\n                        }\r\n                        let unit = angle / time;\r\n                        TimerAdmin._frameNumLoop(1, time, this._Owner, () => {\r\n                            this._Owner.rotation += unit;\r\n                        });\r\n                    });\r\n                },\r\n            };\r\n            this.Move = {\r\n                touchP: null,\r\n                diffP: null,\r\n            };\r\n            this.state = 'none';\r\n        }\r\n        lwgOnAwake() {\r\n            this._Owner.x = Laya.stage.width + 500;\r\n        }\r\n        lwgEvent() {\r\n            this.Ani.event();\r\n        }\r\n        lwgButton() {\r\n            this._btnFour(this._SceneImg('ScissorsMobile'), (e) => {\r\n                this._evNotify(_Event.scissorPlay);\r\n                this.Move.touchP = new Laya.Point(e.stageX, e.stageY);\r\n            }, (e) => {\r\n                if (this.Move.touchP) {\r\n                    this.Move.diffP = new Laya.Point(e.stageX - this.Move.touchP.x, e.stageY - this.Move.touchP.y);\r\n                    this._Owner.x += this.Move.diffP.x;\r\n                    this._Owner.y += this.Move.diffP.y;\r\n                    this.Move.touchP = new Laya.Point(e.stageX, e.stageY);\r\n                    this._evNotify(_Event.scissorPlay);\r\n                }\r\n            }, (e) => {\r\n                this._evNotify(_Event.scissorStop);\r\n                this.Move.touchP = null;\r\n            });\r\n        }\r\n        onTriggerEnter(other, _Owner) {\r\n            if (this.state == 'none' || this.state == other.owner.parent.name) {\r\n                if (!other['cut']) {\r\n                    other['cut'] = true;\r\n                    this._evNotify(_Event.scissorPlay);\r\n                    this._evNotify(_Event.scissorStop);\r\n                    this.state = other.owner.parent.name;\r\n                    EventAdmin._notify(_Event.trigger, [other.owner]);\r\n                }\r\n            }\r\n        }\r\n        onTriggerExit(other, _Owner) {\r\n            if (this.state == other.owner.parent.name) {\r\n                this.state = 'none';\r\n            }\r\n        }\r\n    }\r\n    class _Item extends Admin._ObjectBase {\r\n        lwgButton() {\r\n            this._btnUp(this._Owner, () => {\r\n                _Data._Ins()._setPitch(this._Owner['_dataSource'][_Data._Ins()._property.name]);\r\n                this._evNotify(_Event.changeClothes);\r\n            }, null);\r\n        }\r\n    }\r\n    class MakeTailor extends Admin._SceneBase {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.DLine = {\r\n                Data: new DataAdmin._Table(),\r\n                getClothesArr: () => {\r\n                    if (!this[`DLCloArr`]) {\r\n                        this[`DLCloArr`] = [];\r\n                        let classArr = _Data._Ins()._arr;\r\n                        for (let index = 0; index < classArr.length; index++) {\r\n                            let clo = Tools._Node.createPrefab(_Res._list.prefab2D[`${classArr[index]['name']}`]['prefab']);\r\n                            this[`DLCloArr`].push(clo);\r\n                        }\r\n                    }\r\n                    return this[`DLCloArr`];\r\n                },\r\n                Clothes: null,\r\n                LineParent: null,\r\n                setData: () => {\r\n                    this.DLine.Data._arr = [];\r\n                    for (let index = 0; index < this.DLine.LineParent.numChildren; index++) {\r\n                        const Line = this.DLine.LineParent.getChildAt(index);\r\n                        if (Line.numChildren > 0) {\r\n                            let data = {};\r\n                            data['Line'] = Line;\r\n                            data[this.DLine.Data._property.name] = Line.name;\r\n                            data[this.DLine.Data._property.conditionNum] = Line.numChildren;\r\n                            data[this.DLine.Data._property.degreeNum] = 0;\r\n                            this.DLine.Data._arr.push(data);\r\n                        }\r\n                    }\r\n                },\r\n                changeClothes: () => {\r\n                    let clothesArr = this.DLine.getClothesArr();\r\n                    let name = _Data._Ins()._pitchName ? _Data._Ins()._pitchName : clothesArr[0]['name'];\r\n                    for (let index = 0; index < clothesArr.length; index++) {\r\n                        const element = clothesArr[index];\r\n                        if (element.name == name) {\r\n                            this._Owner.addChild(element);\r\n                            this.DLine.Clothes = element;\r\n                            element.zOrder = 20;\r\n                            this.DLine.LineParent = element.getChildByName('LineParent');\r\n                            this.DLine.setData();\r\n                            return;\r\n                        }\r\n                        else {\r\n                            element.removeSelf();\r\n                        }\r\n                    }\r\n                },\r\n            };\r\n            this.Navigation = {\r\n                appear: () => {\r\n                    let time = 500;\r\n                    let delay = 800;\r\n                    Animation2D.move(this._ImgVar('Navigation'), Laya.stage.width - this._ImgVar('Navigation').width - 80, 0, time, () => {\r\n                        Animation2D.move(this._ImgVar('Navigation'), Laya.stage.width - this._ImgVar('Navigation').width, 0, time / 3, () => {\r\n                            this._ImgVar('BtnChoose').visible = true;\r\n                            Animation2D.bombs_Appear(this._ImgVar('BtnChoose'), 0, 1, 1.1, 0, time / 5, time / 5 / 2);\r\n                        });\r\n                    }, delay);\r\n                },\r\n                vinish: () => {\r\n                    let time = 400;\r\n                    let delay = 100;\r\n                    Animation2D.bombs_Vanish(this._ImgVar('BtnChoose'), 0, 0, 0, time / 2, delay, () => {\r\n                        this._evNotify(_Event.scissorAppear);\r\n                        Animation2D.move(this._ImgVar('Navigation'), Laya.stage.width + 500, 0, time);\r\n                    });\r\n                },\r\n                btn: () => {\r\n                    this._btnUp(this._ImgVar('BtnChoose'), () => {\r\n                        this.Navigation.vinish();\r\n                    });\r\n                }\r\n            };\r\n            this.completeEffc = {\r\n                ani1: () => {\r\n                    this._AniVar('complete').play(0, false);\r\n                    let _caller = {};\r\n                    TimerAdmin._frameLoop(1, _caller, () => {\r\n                        let gP = this._ImgVar('EFlower').parent.localToGlobal(new Laya.Point(this._ImgVar('EFlower').x, this._ImgVar('EFlower').y));\r\n                        Effects._Particle._fallingVertical(this._Owner, new Laya.Point(gP.x, gP.y - 40), [0, 0], null, null, [0, 360], [Effects._SkinUrl.花2], [[255, 222, 0, 1], [255, 222, 0, 1]], null, [100, 200], [0.8, 1.5], [0.05, 0.1]);\r\n                        Effects._Particle._fallingVertical(this._Owner, new Laya.Point(gP.x, gP.y), [0, 0], null, null, [0, 360], [Effects._SkinUrl.花2], [[255, 222, 0, 1], [255, 24, 0, 1]], null, [100, 200], [0.8, 1.5], [0.05, 0.1]);\r\n                    });\r\n                    this._AniVar('complete').on(Laya.Event.COMPLETE, this, () => {\r\n                        TimerAdmin._clearAll([_caller]);\r\n                    });\r\n                },\r\n                ani2: () => {\r\n                    let num = 6;\r\n                    let spcaing = 20;\r\n                    for (let index = 0; index < num; index++) {\r\n                        let moveY = 7 * index + 5;\r\n                        let p1 = new Laya.Point(-200, Laya.stage.height);\r\n                        let _caller = {};\r\n                        let funcL = () => {\r\n                            p1.x += spcaing;\r\n                            if (p1.x > Laya.stage.width) {\r\n                                Laya.timer.clearAll(_caller);\r\n                            }\r\n                            p1.y -= moveY;\r\n                            Effects._Particle._fallingVertical(this._Owner, new Laya.Point(p1.x, p1.y), [0, 0], null, null, [0, 360], [Effects._SkinUrl.花2], [[255, 222, 0, 1], [255, 24, 0, 1]], null, [100, 200], [0.8, 1.5], [0.05, 0.1]);\r\n                        };\r\n                        TimerAdmin._frameLoop(2, _caller, () => {\r\n                            funcL();\r\n                        });\r\n                        let p2 = new Laya.Point(Laya.stage.width + 200, Laya.stage.height);\r\n                        let _callerR = {};\r\n                        let funcR = () => {\r\n                            p2.x -= spcaing;\r\n                            if (p2.x < 0) {\r\n                                Laya.timer.clearAll(_callerR);\r\n                            }\r\n                            p2.y -= moveY;\r\n                            Effects._Particle._fallingVertical(this._Owner, new Laya.Point(p2.x, p2.y), [0, 0], null, null, [0, 360], [Effects._SkinUrl.花2], [[255, 222, 0, 1], [255, 24, 0, 1]], null, [100, 200], [0.8, 1.5], [0.05, 0.1]);\r\n                        };\r\n                        TimerAdmin._frameLoop(2, _callerR, () => {\r\n                            funcR();\r\n                        });\r\n                    }\r\n                },\r\n                ani3: () => {\r\n                    let len = Laya.stage.width;\r\n                    let _height = Laya.stage.height * 2.5;\r\n                    let Img = new Laya.Image;\r\n                    Img.width = 100;\r\n                    Img.height = _height;\r\n                    Img.rotation = 40;\r\n                    Tools._Node.changePivot(Img, 0, _height / 2);\r\n                    Img.pos(0, 0);\r\n                    Laya.stage.addChild(Img);\r\n                    Img.zOrder = 1000;\r\n                    let num = 20;\r\n                    let spcaing = 40;\r\n                    for (let index = 0; index < num; index++) {\r\n                        let p1 = new Laya.Point(0, Img.height / num * index);\r\n                        let p2 = new Laya.Point(Laya.stage.width, Img.height / num * index);\r\n                        let _caller = {};\r\n                        let func = () => {\r\n                            p1.x += spcaing;\r\n                            if (p1.x > len) {\r\n                                Laya.timer.clearAll(_caller);\r\n                            }\r\n                            p2.x -= spcaing;\r\n                            if (p2.x > len) {\r\n                                Laya.timer.clearAll(_caller);\r\n                            }\r\n                            if (index % 2 == 0) {\r\n                                Effects._Particle._fallingVertical(Img, new Laya.Point(p1.x, p1.y), [0, 0], null, null, [0, 360], [Effects._SkinUrl.星星8], [[255, 222, 0, 1], [255, 24, 0, 1]], null, [100, 200], [0.8, 1.5], [0.05, 0.1]);\r\n                            }\r\n                            else {\r\n                                Effects._Particle._fallingVertical_Reverse(Img, new Laya.Point(p2.x, p2.y), [0, 0], null, null, [0, 360], [Effects._SkinUrl.星星8], [[255, 222, 0, 1], [255, 24, 0, 1]], null, [-100, -200], [-0.8, -1.5], [-0.05, -0.1]);\r\n                            }\r\n                        };\r\n                        TimerAdmin._frameNumLoop(2, 50, _caller, () => {\r\n                            func();\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        lwgOnAwake() {\r\n            this._ImgVar('Scissor').addComponent(_Scissor);\r\n            _Data._Ins()._List = this._ListVar('List');\r\n            _Data._Ins()._List.selectEnable = true;\r\n            _Data._Ins()._List.vScrollBarSkin = \"\";\r\n            _Data._Ins()._arr = _Data._Ins()._getArrByClassify(_Data._Ins()._classify.Dress);\r\n            _Data._Ins()._List.array = _Data._Ins()._arr;\r\n            _Data._Ins()._List.renderHandler = new Laya.Handler(this, (Cell, index) => {\r\n                let data = Cell.dataSource;\r\n                let Icon = Cell.getChildByName('Icon');\r\n                Icon.skin = `Game/UI/Clothes/Icon/${data['name']}.png`;\r\n                let Board = Cell.getChildByName('Board');\r\n                Board.skin = `Lwg/UI/ui_orthogon_green.png`;\r\n                if (data[_Data._Ins()._property.pitch]) {\r\n                    Board.skin = `Lwg/UI/ui_l_orthogon_green.png`;\r\n                }\r\n                else {\r\n                    Board.skin = `Lwg/UI/ui_orthogon_grass.png`;\r\n                }\r\n                if (!Cell.getComponent(_Item)) {\r\n                    Cell.addComponent(_Item);\r\n                }\r\n            });\r\n        }\r\n        lwgAdaptive() {\r\n            this._ImgVar('Navigation').x = Laya.stage.width + 500;\r\n            this._ImgVar('BtnChoose').visible = false;\r\n        }\r\n        lwgOpenAniAfter() {\r\n            this.Navigation.appear();\r\n        }\r\n        lwgOnStart() {\r\n            this.DLine.changeClothes();\r\n        }\r\n        lwgEvent() {\r\n            this._evReg(_Event.changeClothes, () => {\r\n                this.DLine.changeClothes();\r\n            });\r\n            this._evReg(_Event.trigger, (Dotted) => {\r\n                let value = this.DLine.Data._checkCondition(Dotted.parent.name);\r\n                Dotted.visible = false;\r\n                if (value) {\r\n                    let Cloth = this.DLine.Clothes.getChildByName(`Cloth${Dotted.parent.name.substr(4)}`);\r\n                    Cloth.removeSelf();\r\n                    if (this.DLine.Data._checkAllCompelet()) {\r\n                        Tools._Node.removeAllChildren(this.DLine.LineParent);\r\n                        this._evNotify(_Event.scissorSitu);\r\n                        TimerAdmin._frameOnce(60, this, () => {\r\n                            this._evNotify(_Event.completeEffc);\r\n                        });\r\n                        TimerAdmin._frameOnce(240, this, () => {\r\n                            this._openScene('MakeClothes', true, true);\r\n                        });\r\n                    }\r\n                }\r\n                let gPos = Dotted.parent.localToGlobal(new Laya.Point(Dotted.x, Dotted.y));\r\n                if (Dotted.name == 'A') {\r\n                    if (this._ImgVar('Scissor').x <= gPos.x) {\r\n                        this._evNotify(_Event.scissorRotation, [Dotted.rotation]);\r\n                    }\r\n                    else {\r\n                        this._evNotify(_Event.scissorRotation, [180 + Dotted.rotation]);\r\n                    }\r\n                }\r\n                else {\r\n                    if (this._ImgVar('Scissor').y >= gPos.y) {\r\n                        this._evNotify(_Event.scissorRotation, [Dotted.rotation]);\r\n                    }\r\n                    else {\r\n                        this._evNotify(_Event.scissorRotation, [180 + Dotted.rotation]);\r\n                    }\r\n                }\r\n            });\r\n            this._evReg(_Event.completeEffc, () => {\r\n                this.completeEffc.ani3();\r\n            });\r\n        }\r\n        lwgButton() {\r\n            this.Navigation.btn();\r\n        }\r\n    }\r\n    _MakeTailor.MakeTailor = MakeTailor;\r\n})(_MakeTailor || (_MakeTailor = {}));\r\n",
  "references": [
    "D:/Game/project/3DDressUp/Project_Laya2.9.0/3DDressUp_Laya2.9.0/3DDressUp_Laya2.9.0/src/script/Lwg/Lwg.ts",
    "D:/Game/project/3DDressUp/Project_Laya2.9.0/3DDressUp_Laya2.9.0/3DDressUp_Laya2.9.0/src/script/Lwg/_PreLoad.ts"
  ]
}
